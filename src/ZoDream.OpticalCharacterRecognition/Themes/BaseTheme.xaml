<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sctl="clr-namespace:ZoDream.Shared.Controls;assembly=ZoDream.Shared.Controls"
                    xmlns:cvt="clr-namespace:ZoDream.Shared.Converters">
    <cvt:ToggleConverter x:Key="ToggleCvt"/>
    <FontFamily x:Key="IconFontFamily">Segoe MDL2 Assets</FontFamily>
    <Style x:Key="IconBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="FontFamily" Value="{StaticResource IconFontFamily}"/>
    </Style>
    <Style x:Key="CenterPanel" TargetType="Panel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="300"/>
    </Style>
    <Style x:Key="PrimaryPanel" TargetType="Panel">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
    </Style>
    <Style x:Key="BodyPanel" TargetType="Panel">
        <Setter Property="Background" Value="{DynamicResource BodyBrush}"/>
    </Style>
    <Style x:Key="LargeIcon" TargetType="sctl:IconButton">
        <Setter Property="IconSize" Value="50"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Foreground" Value="{DynamicResource BodyTextBrush}"/>
    </Style>
    <Style x:Key="TopLargeIcon" TargetType="sctl:IconButton">
        <Setter Property="IconSize" Value="40"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>
    <Style x:Key="CustomWindow" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Topmost" Value="True"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Background" Value="{DynamicResource BodyBrush}"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Grid Margin="5">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Margin}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" ShadowDepth="0"/>
                            </Border.Effect>
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowIconBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource IconFontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" 
                            Name="border" 
                            SnapsToDevicePixels="True" CornerRadius="0,5,0,0">
                        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Panel.Background" TargetName="border" Value="{DynamicResource HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowBackIconBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource IconFontFamily}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" 
                            Name="border" 
                            SnapsToDevicePixels="True" CornerRadius="5,0,0,0">
                        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Panel.Background" TargetName="border" Value="{DynamicResource HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogFooter" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="10,20"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>
    <Style x:Key="DialogFooterBtn" TargetType="Button">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="Padding" Value="30,10"/>
    </Style>
</ResourceDictionary>